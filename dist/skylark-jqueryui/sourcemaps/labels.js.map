{"version":3,"sources":["labels.js"],"names":["define","$","fn","labels","ancestor","selector","id","ancestors","this","length","pushStack","eq","parents","attr","last","add","siblings","ui","escapeSelector","find","addBack"],"mappings":";;;;;;;AAcAA,QAAU,iBAAkB,YAAa,qBAAuB,SAAUC,GAEzE,MAAOA,GAAEC,GAAGC,OAAS,WACpB,GAAIC,GAAUC,EAAUC,EAAIH,EAAQI,CAEpC,OAAMC,MAAKC,OAKND,KAAM,GAAIL,QAAUK,KAAM,GAAIL,OAAOM,OAClCD,KAAKE,UAAWF,KAAM,GAAIL,SAMlCA,EAASK,KAAKG,GAAI,GAAIC,QAAS,SAG/BN,EAAKE,KAAKK,KAAM,MACXP,IAIJF,EAAWI,KAAKG,GAAI,GAAIC,UAAUE,OAGlCP,EAAYH,EAASW,IAAKX,EAASK,OAASL,EAASY,WAAaR,KAAKQ,YAGvEX,EAAW,cAAgBJ,EAAEgB,GAAGC,eAAgBZ,GAAO,KAEvDH,EAASA,EAAOY,IAAKR,EAAUY,KAAMd,GAAWe,QAASf,KAKnDG,KAAKE,UAAWP,IAhCfK,KAAKE","file":"../labels.js","sourcesContent":["/*!\n * jQuery UI Labels @VERSION\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: labels\n//>>group: Core\n//>>description: Find all the labels associated with a given input\n//>>docs: http://api.jqueryui.com/labels/\n\ndefine( [ \"skylark-jquery\", \"./version\", \"./escape-selector\" ], function( $ ) {\n\n\treturn $.fn.labels = function() {\n\t\tvar ancestor, selector, id, labels, ancestors;\n\n\t\tif ( !this.length ) {\n\t\t\treturn this.pushStack( [] );\n\t\t}\n\n\t\t// Check control.labels first\n\t\tif ( this[ 0 ].labels && this[ 0 ].labels.length ) {\n\t\t\treturn this.pushStack( this[ 0 ].labels );\n\t\t}\n\n\t\t// Support: IE <= 11, FF <= 37, Android <= 2.3 only\n\t\t// Above browsers do not support control.labels. Everything below is to support them\n\t\t// as well as document fragments. control.labels does not work on document fragments\n\t\tlabels = this.eq( 0 ).parents( \"label\" );\n\n\t\t// Look for the label based on the id\n\t\tid = this.attr( \"id\" );\n\t\tif ( id ) {\n\n\t\t\t// We don't search against the document in case the element\n\t\t\t// is disconnected from the DOM\n\t\t\tancestor = this.eq( 0 ).parents().last();\n\n\t\t\t// Get a full set of top level ancestors\n\t\t\tancestors = ancestor.add( ancestor.length ? ancestor.siblings() : this.siblings() );\n\n\t\t\t// Create a selector for the label based on the id\n\t\t\tselector = \"label[for='\" + $.ui.escapeSelector( id ) + \"']\";\n\n\t\t\tlabels = labels.add( ancestors.find( selector ).addBack( selector ) );\n\n\t\t}\n\n\t\t// Return whatever we have found for labels\n\t\treturn this.pushStack( labels );\n\t}\n});\n"]}