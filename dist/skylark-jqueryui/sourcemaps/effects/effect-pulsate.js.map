{"version":3,"sources":["effects/effect-pulsate.js"],"names":["define","$","effects","options","done","doAnimate","element","properties","duration","ease","d","Deferred","animate","resolve","promise","this","mode","show","hide","showhide","anims","times","animateTo","i","queue","length","is","css","skylark","langx","funcs","push","opacity","easing","reduce","prev","curr","index","array","then"],"mappings":";;;;;;;AAeAA,QACC,iBACA,aACA,aACE,SAAUC,GAEb,MAAOA,GAAEC,QAAQF,OAAQ,UAAW,OAAQ,SAAUG,EAASC,GA0B9D,QAASC,GAAUC,EAAQC,EAAYC,EAAUC,GAChD,MAAO,YACN,GAAIC,GAAI,GAAIC,EAKZ,OAHAL,GAAQM,QAASL,EAAYC,EAAUC,EAAM,WAC5CC,EAAEG,YAEIH,EAAEI,SAhCX,GAAIR,GAAUL,EAAGc,MAChBC,EAAOb,EAAQa,KACfC,EAAgB,SAATD,EACPE,EAAgB,SAATF,EACPG,EAAWF,GAAQC,EAGnBE,EAAmC,GAAvBjB,EAAQkB,OAAS,IAAcF,EAAW,EAAI,GAC1DX,EAAWL,EAAQK,SAAWY,EAC9BE,EAAY,EACZC,EAAI,CACOjB,GAAQkB,QAAQC,QAEvBR,GAASX,EAAQoB,GAAI,cACzBpB,EAAQqB,IAAK,UAAW,GAAIV,OAC5BK,EAAY,EAuBb,KAlBA,GAAIM,GAAU3B,EAAE2B,QACfC,EAAQD,EAAQC,MAChBlB,EAAWkB,EAAMlB,SACdmB,KAeIP,EAAIH,EAAOG,IAClBO,EAAMC,KAAK1B,EAAUC,GAAU0B,QAASV,GAAad,EAAUL,EAAQ8B,SACvEX,EAAY,EAAIA,CAGdQ,GAAMC,KAAK1B,EAAUC,GAAU0B,QAASV,GAAad,EAAUL,EAAQ8B,SAE1EH,EAAMC,KAAK3B,GACX0B,EAAMI,OAAO,SAASC,EAAMC,EAAMC,EAAOC,GACtC,MAAOH,GAAKI,KAAKH,IACjBzB,EAASE","file":"../../effects/effect-pulsate.js","sourcesContent":["/*!\n * jQuery UI Effects Pulsate @VERSION\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: Pulsate Effect\n//>>group: Effects\n//>>description: Pulsates an element n times by changing the opacity to zero and back.\n//>>docs: http://api.jqueryui.com/pulsate-effect/\n//>>demos: http://jqueryui.com/effect/\n\ndefine( [\n\t\"skylark-jquery\",\n\t\"../version\",\n\t\"../effect\"\n], function( $ ) {\n\nreturn $.effects.define( \"pulsate\", \"show\", function( options, done ) {\n\tvar element = $( this ),\n\t\tmode = options.mode,\n\t\tshow = mode === \"show\",\n\t\thide = mode === \"hide\",\n\t\tshowhide = show || hide,\n\n\t\t// Showing or hiding leaves off the \"last\" animation\n\t\tanims = ( ( options.times || 5 ) * 2 ) + ( showhide ? 1 : 0 ),\n\t\tduration = options.duration / anims,\n\t\tanimateTo = 0,\n\t\ti = 1,\n\t\tqueuelen = element.queue().length;\n\n\tif ( show || !element.is( \":visible\" ) ) {\n\t\telement.css( \"opacity\", 0 ).show();\n\t\tanimateTo = 1;\n\t}\n\n\t// Anims - 1 opacity \"toggles\"\n\n\tvar skylark = $.skylark,\n\t\tlangx = skylark.langx,\n\t\tDeferred = langx.Deferred;\n\tvar funcs = [];\n\n\tfunction doAnimate(element,properties, duration, ease) {\n\t\treturn function() {\n\t\t\tvar d = new Deferred();\n\n\t\t\telement.animate( properties, duration, ease ,function(){\n\t\t\t\td.resolve();\n\t\t\t});\n\t\t\treturn d.promise;\n\n\t\t}\n\t}\n\n\n\tfor ( ; i < anims; i++ ) {\n\t\tfuncs.push(doAnimate(element,{ opacity: animateTo }, duration, options.easing ));\n\t\tanimateTo = 1 - animateTo;\n\t}\n\n    funcs.push(doAnimate(element,{ opacity: animateTo }, duration, options.easing ));\n\n\tfuncs.push(done);\n\tfuncs.reduce(function(prev, curr, index, array) {\n  \t\treturn prev.then(curr);\n\t}, Deferred.resolve());\n\n\t//element.queue( done );\n\n\t//$.effects.unshift( element, queuelen, anims + 1 );\n} );\n\n});\n"]}