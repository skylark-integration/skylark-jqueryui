{"version":3,"sources":["effects/effect-pulsate.js"],"names":["define","$","effects","options","done","doAnimate","element","properties","duration","ease","d","Deferred","animate","resolve","promise","this","mode","show","hide","showhide","anims","times","animateTo","i","queue","length","is","css","skylark","langx","funcs","push","opacity","easing","reduce","prev","curr","index","array","then"],"mappings":";;;;;;;AAeAA,QACC,iBACA,aACA,aACE,SAAUC,GAEb,MAAOA,GAAEC,QAAQF,OAAQ,UAAW,OAAQ,SAAUG,EAASC,GA0B9D,QAASC,GAAUC,EAAQC,EAAYC,EAAUC,GAChD,MAAO,YACN,GAAIC,GAAI,GAAIC,EAKZ,OAHAL,GAAQM,QAASL,EAAYC,EAAUC,EAAM,WAC5CC,EAAEG,YAEIH,EAAEI,SAhCX,GAAIR,GAAUL,EAAGc,MAChBC,EAAOb,EAAQa,KACfC,EAAgB,SAATD,EACPE,EAAgB,SAATF,EACPG,EAAWF,GAAQC,EAGnBE,EAAmC,GAAvBjB,EAAQkB,OAAS,IAAcF,EAAW,EAAI,GAC1DX,EAAWL,EAAQK,SAAWY,EAC9BE,EAAY,EACZC,EAAI,CACOjB,GAAQkB,QAAQC,QAEvBR,GAASX,EAAQoB,GAAI,cACzBpB,EAAQqB,IAAK,UAAW,GAAIV,OAC5BK,EAAY,EAuBb,KAlBA,GAAIM,GAAU3B,EAAE2B,QACfC,EAAQD,EAAQC,MAChBlB,EAAWkB,EAAMlB,SACdmB,KAeIP,EAAIH,EAAOG,IAClBO,EAAMC,KAAK1B,EAAUC,GAAU0B,QAASV,GAAad,EAAUL,EAAQ8B,SACvEX,EAAY,EAAIA,CAGdQ,GAAMC,KAAK1B,EAAUC,GAAU0B,QAASV,GAAad,EAAUL,EAAQ8B,SAE1EH,EAAMC,KAAK3B,GACX0B,EAAMI,OAAO,SAASC,EAAMC,EAAMC,EAAOC,GACtC,MAAOH,GAAKI,KAAKH,IACjBzB,EAASE","file":"../../effects/effect-pulsate.js","sourcesContent":["/*!\r\n * jQuery UI Effects Pulsate @VERSION\r\n * http://jqueryui.com\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license.\r\n * http://jquery.org/license\r\n */\r\n\r\n//>>label: Pulsate Effect\r\n//>>group: Effects\r\n//>>description: Pulsates an element n times by changing the opacity to zero and back.\r\n//>>docs: http://api.jqueryui.com/pulsate-effect/\r\n//>>demos: http://jqueryui.com/effect/\r\n\r\ndefine( [\r\n\t\"skylark-jquery\",\r\n\t\"../version\",\r\n\t\"../effect\"\r\n], function( $ ) {\r\n\r\nreturn $.effects.define( \"pulsate\", \"show\", function( options, done ) {\r\n\tvar element = $( this ),\r\n\t\tmode = options.mode,\r\n\t\tshow = mode === \"show\",\r\n\t\thide = mode === \"hide\",\r\n\t\tshowhide = show || hide,\r\n\r\n\t\t// Showing or hiding leaves off the \"last\" animation\r\n\t\tanims = ( ( options.times || 5 ) * 2 ) + ( showhide ? 1 : 0 ),\r\n\t\tduration = options.duration / anims,\r\n\t\tanimateTo = 0,\r\n\t\ti = 1,\r\n\t\tqueuelen = element.queue().length;\r\n\r\n\tif ( show || !element.is( \":visible\" ) ) {\r\n\t\telement.css( \"opacity\", 0 ).show();\r\n\t\tanimateTo = 1;\r\n\t}\r\n\r\n\t// Anims - 1 opacity \"toggles\"\r\n\r\n\tvar skylark = $.skylark,\r\n\t\tlangx = skylark.langx,\r\n\t\tDeferred = langx.Deferred;\r\n\tvar funcs = [];\r\n\r\n\tfunction doAnimate(element,properties, duration, ease) {\r\n\t\treturn function() {\r\n\t\t\tvar d = new Deferred();\r\n\r\n\t\t\telement.animate( properties, duration, ease ,function(){\r\n\t\t\t\td.resolve();\r\n\t\t\t});\r\n\t\t\treturn d.promise;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfor ( ; i < anims; i++ ) {\r\n\t\tfuncs.push(doAnimate(element,{ opacity: animateTo }, duration, options.easing ));\r\n\t\tanimateTo = 1 - animateTo;\r\n\t}\r\n\r\n    funcs.push(doAnimate(element,{ opacity: animateTo }, duration, options.easing ));\r\n\r\n\tfuncs.push(done);\r\n\tfuncs.reduce(function(prev, curr, index, array) {\r\n  \t\treturn prev.then(curr);\r\n\t}, Deferred.resolve());\r\n\r\n\t//element.queue( done );\r\n\r\n\t//$.effects.unshift( element, queuelen, anims + 1 );\r\n} );\r\n\r\n});\r\n"]}