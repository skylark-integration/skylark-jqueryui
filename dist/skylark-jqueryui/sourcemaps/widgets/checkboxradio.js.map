{"version":3,"sources":["widgets/checkboxradio.js"],"names":["define","$","widget","ui","formResetMixin","version","options","disabled","label","icon","classes","ui-checkboxradio-label","ui-checkboxradio-icon","_getCreateOptions","labels","that","this","_super","_readType","element","length","error","originalLabel","contents","not","each","nodeType","text","outerHTML","_create","checked","_bindFormResetHandler","_setOption","_addClass","type","_updateLabel","_enhance","_on","change","focus","blur","_removeClass","nodeName","toLowerCase","test","_updateIcon","_getRadioGroup","group","name","nameSelector","escapeSelector","form","elements","filter","_form","_toggleClasses","_toggleClass","instance","checkboxradio","_destroy","_unbindFormResetHandler","remove","iconSpace","key","value","refresh","toAdd","prependTo","after","undefined","append","isDisabled","_setOptions"],"mappings":";;;;;;;AAmBAA,QACG,iBACA,qBACA,sBACA,YACA,aACD,SAAUC,GAqPZ,MAnPAA,GAAEC,OAAQ,oBAAsBD,EAAEE,GAAGC,gBACpCC,QAAS,WACTC,SACCC,SAAU,KACVC,MAAO,KACPC,MAAM,EACNC,SACCC,yBAA0B,gBAC1BC,wBAAyB,kBAI3BC,kBAAmB,WAClB,GAAIN,GAAUO,EACVC,EAAOC,KACPV,EAAUU,KAAKC,YAmCnB,OA9BAD,MAAKE,YAELJ,EAASE,KAAKG,QAAQL,SAGtBE,KAAKR,MAAQP,EAAGa,EAAQA,EAAOM,OAAS,IAClCJ,KAAKR,MAAMY,QAChBnB,EAAEoB,MAAO,2CAGVL,KAAKM,cAAgB,GAIrBN,KAAKR,MAAMe,WAAWC,IAAKR,KAAKG,QAAS,IAAMM,KAAM,WAIpDV,EAAKO,eAAmC,IAAlBN,KAAKU,SAAiBzB,EAAGe,MAAOW,OAASX,KAAKY,YAIhEZ,KAAKM,gBACThB,EAAQE,MAAQQ,KAAKM,eAGtBf,EAAWS,KAAKG,QAAS,GAAIZ,SACZ,MAAZA,IACJD,EAAQC,SAAWA,GAEbD,GAGRuB,QAAS,WACR,GAAIC,GAAUd,KAAKG,QAAS,GAAIW,OAEhCd,MAAKe,wBAEyB,MAAzBf,KAAKV,QAAQC,WACjBS,KAAKV,QAAQC,SAAWS,KAAKG,QAAS,GAAIZ,UAG3CS,KAAKgB,WAAY,WAAYhB,KAAKV,QAAQC,UAC1CS,KAAKiB,UAAW,mBAAoB,+BACpCjB,KAAKiB,UAAWjB,KAAKR,MAAO,yBAA0B,uBAEnC,UAAdQ,KAAKkB,MACTlB,KAAKiB,UAAWjB,KAAKR,MAAO,gCAGxBQ,KAAKV,QAAQE,OAASQ,KAAKV,QAAQE,QAAUQ,KAAKM,cACtDN,KAAKmB,eACMnB,KAAKM,gBAChBN,KAAKV,QAAQE,MAAQQ,KAAKM,eAG3BN,KAAKoB,WAEAN,GACJd,KAAKiB,UAAWjB,KAAKR,MAAO,2BAA4B,mBAGzDQ,KAAKqB,KACJC,OAAQ,iBACRC,MAAO,WACNvB,KAAKiB,UAAWjB,KAAKR,MAAO,KAAM,mCAEnCgC,KAAM,WACLxB,KAAKyB,aAAczB,KAAKR,MAAO,KAAM,sCAKxCU,UAAW,WACV,GAAIwB,GAAW1B,KAAKG,QAAS,GAAIuB,SAASC,aAC1C3B,MAAKkB,KAAOlB,KAAKG,QAAS,GAAIe,KACZ,UAAbQ,GAAyB,iBAAiBE,KAAM5B,KAAKkB,OACzDjC,EAAEoB,MAAO,kDAAoDqB,EAC5D,qBAAuB1B,KAAKkB,OAK/BE,SAAU,WACTpB,KAAK6B,YAAa7B,KAAKG,QAAS,GAAIW,UAGrC5B,OAAQ,WACP,MAAOc,MAAKR,OAGbsC,eAAgB,WACf,GAAIC,GACAC,EAAOhC,KAAKG,QAAS,GAAI6B,KACzBC,EAAe,eAAiBhD,EAAEE,GAAG+C,eAAgBF,GAAS,IAElE,OAAMA,IAKLD,EADI/B,KAAKmC,KAAK/B,OACNnB,EAAGe,KAAKmC,KAAM,GAAIC,UAAWC,OAAQJ,GAIrChD,EAAGgD,GAAeI,OAAQ,WACjC,MAAoC,KAA7BpD,EAAGe,MAAOsC,QAAQlC,SAIpB2B,EAAMvB,IAAKR,KAAKG,UAbflB,OAgBTsD,eAAgB,WACf,GAAIzB,GAAUd,KAAKG,QAAS,GAAIW,OAChCd,MAAKwC,aAAcxC,KAAKR,MAAO,2BAA4B,kBAAmBsB,GAEzEd,KAAKV,QAAQG,MAAsB,aAAdO,KAAKkB,MAC9BlB,KAAKwC,aAAcxC,KAAKP,KAAM,KAAM,iCAAkCqB,GACpE0B,aAAcxC,KAAKP,KAAM,KAAM,iBAAkBqB,GAGjC,UAAdd,KAAKkB,MACTlB,KAAK8B,iBACHrB,KAAM,WACN,GAAIgC,GAAWxD,EAAGe,MAAO0C,cAAe,WAEnCD,IACJA,EAAShB,aAAcgB,EAASjD,MAC/B,2BAA4B,sBAMlCmD,SAAU,WACT3C,KAAK4C,0BAEA5C,KAAKP,OACTO,KAAKP,KAAKoD,SACV7C,KAAK8C,UAAUD,WAIjB7B,WAAY,SAAU+B,EAAKC,GAG1B,GAAa,UAARD,GAAoBC,EAMzB,MAFAhD,MAAKC,OAAQ8C,EAAKC,GAEL,aAARD,GACJ/C,KAAKwC,aAAcxC,KAAKR,MAAO,KAAM,oBAAqBwD,QAC1DhD,KAAKG,QAAS,GAAIZ,SAAWyD,QAK9BhD,MAAKiD,WAGNpB,YAAa,SAAUf,GACtB,GAAIoC,GAAQ,6BAEPlD,MAAKV,QAAQG,MACXO,KAAKP,OACVO,KAAKP,KAAOR,EAAG,UACfe,KAAK8C,UAAY7D,EAAG,kBACpBe,KAAKiB,UAAWjB,KAAK8C,UAAW,gCAGd,aAAd9C,KAAKkB,MACTgC,GAASpC,EAAU,iCAAmC,gBACtDd,KAAKyB,aAAczB,KAAKP,KAAM,KAAMqB,EAAU,gBAAkB,kBAEhEoC,GAAS,gBAEVlD,KAAKiB,UAAWjB,KAAKP,KAAM,wBAAyByD,GAC9CpC,GACLd,KAAKyB,aAAczB,KAAKP,KAAM,KAAM,kCAErCO,KAAKP,KAAK0D,UAAWnD,KAAKR,OAAQ4D,MAAOpD,KAAK8C,YACrBO,SAAdrD,KAAKP,OAChBO,KAAKP,KAAKoD,SACV7C,KAAK8C,UAAUD,eACR7C,MAAKP,OAId0B,aAAc,WAGb,GAAIZ,GAAWP,KAAKR,MAAMe,WAAWC,IAAKR,KAAKG,QAAS,GACnDH,MAAKP,OACTc,EAAWA,EAASC,IAAKR,KAAKP,KAAM,KAEhCO,KAAK8C,YACTvC,EAAWA,EAASC,IAAKR,KAAK8C,UAAW,KAE1CvC,EAASsC,SAET7C,KAAKR,MAAM8D,OAAQtD,KAAKV,QAAQE,QAGjCyD,QAAS,WACR,GAAInC,GAAUd,KAAKG,QAAS,GAAIW,QAC/ByC,EAAavD,KAAKG,QAAS,GAAIZ,QAEhCS,MAAK6B,YAAaf,GAClBd,KAAKwC,aAAcxC,KAAKR,MAAO,2BAA4B,kBAAmBsB,GAClD,OAAvBd,KAAKV,QAAQE,OACjBQ,KAAKmB,eAGDoC,IAAevD,KAAKV,QAAQC,UAChCS,KAAKwD,aAAejE,SAAYgE,QAM5BtE,EAAEE,GAAGuD","file":"../../widgets/checkboxradio.js","sourcesContent":["/*!\n * jQuery UI Checkboxradio @VERSION\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: Checkboxradio\n//>>group: Widgets\n//>>description: Enhances a form with multiple themeable checkboxes or radio buttons.\n//>>docs: http://api.jqueryui.com/checkboxradio/\n//>>demos: http://jqueryui.com/checkboxradio/\n//>>css.structure: ../../themes/base/core.css\n//>>css.structure: ../../themes/base/button.css\n//>>css.structure: ../../themes/base/checkboxradio.css\n//>>css.theme: ../../themes/base/theme.css\n\ndefine( [\n\t\t\t\"skylark-jquery\",\n\t\t\t\"../escape-selector\",\n\t\t\t\"../form-reset-mixin\",\n\t\t\t\"../labels\",\n\t\t\t\"../widget\"\n],function( $ ) {\n\n$.widget( \"ui.checkboxradio\", [ $.ui.formResetMixin, {\n\tversion: \"@VERSION\",\n\toptions: {\n\t\tdisabled: null,\n\t\tlabel: null,\n\t\ticon: true,\n\t\tclasses: {\n\t\t\t\"ui-checkboxradio-label\": \"ui-corner-all\",\n\t\t\t\"ui-checkboxradio-icon\": \"ui-corner-all\"\n\t\t}\n\t},\n\n\t_getCreateOptions: function() {\n\t\tvar disabled, labels;\n\t\tvar that = this;\n\t\tvar options = this._super() || {};\n\n\t\t// We read the type here, because it makes more sense to throw a element type error first,\n\t\t// rather then the error for lack of a label. Often if its the wrong type, it\n\t\t// won't have a label (e.g. calling on a div, btn, etc)\n\t\tthis._readType();\n\n\t\tlabels = this.element.labels();\n\n\t\t// If there are multiple labels, use the last one\n\t\tthis.label = $( labels[ labels.length - 1 ] );\n\t\tif ( !this.label.length ) {\n\t\t\t$.error( \"No label found for checkboxradio widget\" );\n\t\t}\n\n\t\tthis.originalLabel = \"\";\n\n\t\t// We need to get the label text but this may also need to make sure it does not contain the\n\t\t// input itself.\n\t\tthis.label.contents().not( this.element[ 0 ] ).each( function() {\n\n\t\t\t// The label contents could be text, html, or a mix. We concat each element to get a\n\t\t\t// string representation of the label, without the input as part of it.\n\t\t\tthat.originalLabel += this.nodeType === 3 ? $( this ).text() : this.outerHTML;\n\t\t} );\n\n\t\t// Set the label option if we found label text\n\t\tif ( this.originalLabel ) {\n\t\t\toptions.label = this.originalLabel;\n\t\t}\n\n\t\tdisabled = this.element[ 0 ].disabled;\n\t\tif ( disabled != null ) {\n\t\t\toptions.disabled = disabled;\n\t\t}\n\t\treturn options;\n\t},\n\n\t_create: function() {\n\t\tvar checked = this.element[ 0 ].checked;\n\n\t\tthis._bindFormResetHandler();\n\n\t\tif ( this.options.disabled == null ) {\n\t\t\tthis.options.disabled = this.element[ 0 ].disabled;\n\t\t}\n\n\t\tthis._setOption( \"disabled\", this.options.disabled );\n\t\tthis._addClass( \"ui-checkboxradio\", \"ui-helper-hidden-accessible\" );\n\t\tthis._addClass( this.label, \"ui-checkboxradio-label\", \"ui-button ui-widget\" );\n\n\t\tif ( this.type === \"radio\" ) {\n\t\t\tthis._addClass( this.label, \"ui-checkboxradio-radio-label\" );\n\t\t}\n\n\t\tif ( this.options.label && this.options.label !== this.originalLabel ) {\n\t\t\tthis._updateLabel();\n\t\t} else if ( this.originalLabel ) {\n\t\t\tthis.options.label = this.originalLabel;\n\t\t}\n\n\t\tthis._enhance();\n\n\t\tif ( checked ) {\n\t\t\tthis._addClass( this.label, \"ui-checkboxradio-checked\", \"ui-state-active\" );\n\t\t}\n\n\t\tthis._on( {\n\t\t\tchange: \"_toggleClasses\",\n\t\t\tfocus: function() {\n\t\t\t\tthis._addClass( this.label, null, \"ui-state-focus ui-visual-focus\" );\n\t\t\t},\n\t\t\tblur: function() {\n\t\t\t\tthis._removeClass( this.label, null, \"ui-state-focus ui-visual-focus\" );\n\t\t\t}\n\t\t} );\n\t},\n\n\t_readType: function() {\n\t\tvar nodeName = this.element[ 0 ].nodeName.toLowerCase();\n\t\tthis.type = this.element[ 0 ].type;\n\t\tif ( nodeName !== \"input\" || !/radio|checkbox/.test( this.type ) ) {\n\t\t\t$.error( \"Can't create checkboxradio on element.nodeName=\" + nodeName +\n\t\t\t\t\" and element.type=\" + this.type );\n\t\t}\n\t},\n\n\t// Support jQuery Mobile enhanced option\n\t_enhance: function() {\n\t\tthis._updateIcon( this.element[ 0 ].checked );\n\t},\n\n\twidget: function() {\n\t\treturn this.label;\n\t},\n\n\t_getRadioGroup: function() {\n\t\tvar group;\n\t\tvar name = this.element[ 0 ].name;\n\t\tvar nameSelector = \"input[name='\" + $.ui.escapeSelector( name ) + \"']\";\n\n\t\tif ( !name ) {\n\t\t\treturn $( [] );\n\t\t}\n\n\t\tif ( this.form.length ) {\n\t\t\tgroup = $( this.form[ 0 ].elements ).filter( nameSelector );\n\t\t} else {\n\n\t\t\t// Not inside a form, check all inputs that also are not inside a form\n\t\t\tgroup = $( nameSelector ).filter( function() {\n\t\t\t\treturn $( this )._form().length === 0;\n\t\t\t} );\n\t\t}\n\n\t\treturn group.not( this.element );\n\t},\n\n\t_toggleClasses: function() {\n\t\tvar checked = this.element[ 0 ].checked;\n\t\tthis._toggleClass( this.label, \"ui-checkboxradio-checked\", \"ui-state-active\", checked );\n\n\t\tif ( this.options.icon && this.type === \"checkbox\" ) {\n\t\t\tthis._toggleClass( this.icon, null, \"ui-icon-check ui-state-checked\", checked )\n\t\t\t\t._toggleClass( this.icon, null, \"ui-icon-blank\", !checked );\n\t\t}\n\n\t\tif ( this.type === \"radio\" ) {\n\t\t\tthis._getRadioGroup()\n\t\t\t\t.each( function() {\n\t\t\t\t\tvar instance = $( this ).checkboxradio( \"instance\" );\n\n\t\t\t\t\tif ( instance ) {\n\t\t\t\t\t\tinstance._removeClass( instance.label,\n\t\t\t\t\t\t\t\"ui-checkboxradio-checked\", \"ui-state-active\" );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}\n\t},\n\n\t_destroy: function() {\n\t\tthis._unbindFormResetHandler();\n\n\t\tif ( this.icon ) {\n\t\t\tthis.icon.remove();\n\t\t\tthis.iconSpace.remove();\n\t\t}\n\t},\n\n\t_setOption: function( key, value ) {\n\n\t\t// We don't allow the value to be set to nothing\n\t\tif ( key === \"label\" && !value ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._super( key, value );\n\n\t\tif ( key === \"disabled\" ) {\n\t\t\tthis._toggleClass( this.label, null, \"ui-state-disabled\", value );\n\t\t\tthis.element[ 0 ].disabled = value;\n\n\t\t\t// Don't refresh when setting disabled\n\t\t\treturn;\n\t\t}\n\t\tthis.refresh();\n\t},\n\n\t_updateIcon: function( checked ) {\n\t\tvar toAdd = \"ui-icon ui-icon-background \";\n\n\t\tif ( this.options.icon ) {\n\t\t\tif ( !this.icon ) {\n\t\t\t\tthis.icon = $( \"<span>\" );\n\t\t\t\tthis.iconSpace = $( \"<span> </span>\" );\n\t\t\t\tthis._addClass( this.iconSpace, \"ui-checkboxradio-icon-space\" );\n\t\t\t}\n\n\t\t\tif ( this.type === \"checkbox\" ) {\n\t\t\t\ttoAdd += checked ? \"ui-icon-check ui-state-checked\" : \"ui-icon-blank\";\n\t\t\t\tthis._removeClass( this.icon, null, checked ? \"ui-icon-blank\" : \"ui-icon-check\" );\n\t\t\t} else {\n\t\t\t\ttoAdd += \"ui-icon-blank\";\n\t\t\t}\n\t\t\tthis._addClass( this.icon, \"ui-checkboxradio-icon\", toAdd );\n\t\t\tif ( !checked ) {\n\t\t\t\tthis._removeClass( this.icon, null, \"ui-icon-check ui-state-checked\" );\n\t\t\t}\n\t\t\tthis.icon.prependTo( this.label ).after( this.iconSpace );\n\t\t} else if ( this.icon !== undefined ) {\n\t\t\tthis.icon.remove();\n\t\t\tthis.iconSpace.remove();\n\t\t\tdelete this.icon;\n\t\t}\n\t},\n\n\t_updateLabel: function() {\n\n\t\t// Remove the contents of the label ( minus the icon, icon space, and input )\n\t\tvar contents = this.label.contents().not( this.element[ 0 ] );\n\t\tif ( this.icon ) {\n\t\t\tcontents = contents.not( this.icon[ 0 ] );\n\t\t}\n\t\tif ( this.iconSpace ) {\n\t\t\tcontents = contents.not( this.iconSpace[ 0 ] );\n\t\t}\n\t\tcontents.remove();\n\n\t\tthis.label.append( this.options.label );\n\t},\n\n\trefresh: function() {\n\t\tvar checked = this.element[ 0 ].checked,\n\t\t\tisDisabled = this.element[ 0 ].disabled;\n\n\t\tthis._updateIcon( checked );\n\t\tthis._toggleClass( this.label, \"ui-checkboxradio-checked\", \"ui-state-active\", checked );\n\t\tif ( this.options.label !== null ) {\n\t\t\tthis._updateLabel();\n\t\t}\n\n\t\tif ( isDisabled !== this.options.disabled ) {\n\t\t\tthis._setOptions( { \"disabled\": isDisabled } );\n\t\t}\n\t}\n\n} ] );\n\nreturn $.ui.checkboxradio;\n\n});\n"]}